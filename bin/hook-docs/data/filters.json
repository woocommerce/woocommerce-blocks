{
    "$schema": "https://raw.githubusercontent.com/johnbillion/wp-hooks-generator/0.6.1/schema.json",
    "hooks": [
        {
            "name": "__experimental_woocommerce_blocks_add_data_attributes_to_block",
            "file": "BlockTypesController.php",
            "type": "filter",
            "doc": {
                "description": "Filters the list of allowed Block Names",
                "long_description": "This hook defines which block names should have block name and attribute data- attributes appended on render.",
                "tags": [
                    {
                        "name": "param",
                        "content": "List of namespaces.",
                        "types": [
                            "array"
                        ],
                        "variable": "$allowed_namespaces"
                    }
                ],
                "long_description_html": "<p>This hook defines which block names should have block name and attribute data- attributes appended on render.</p>"
            }
        },
        {
            "name": "__experimental_woocommerce_blocks_add_data_attributes_to_namespace",
            "file": "BlockTypesController.php",
            "type": "filter",
            "doc": {
                "description": "Filters the list of allowed block namespaces.",
                "long_description": "This hook defines which block namespaces should have block name and attribute `data-` attributes appended on render.",
                "tags": [
                    {
                        "name": "param",
                        "content": "List of namespaces.",
                        "types": [
                            "array"
                        ],
                        "variable": "$allowed_namespaces"
                    }
                ],
                "long_description_html": "<p>This hook defines which block namespaces should have block name and attribute <code>data-</code> attributes appended on render.</p>"
            }
        },
        {
            "name": "__experimental_woocommerce_blocks_payment_gateway_features_list",
            "file": "Payments/Integrations/PayPal.php",
            "type": "filter",
            "doc": {
                "description": "Filter to control what features are available for each payment gateway.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "List of supported features.",
                        "types": [
                            "array"
                        ],
                        "variable": "$features"
                    },
                    {
                        "name": "param",
                        "content": "Gateway name.",
                        "types": [
                            "string"
                        ],
                        "variable": "$name"
                    },
                    {
                        "name": "return",
                        "content": "Updated list of supported features.",
                        "types": [
                            "array"
                        ]
                    }
                ],
                "long_description_html": ""
            }
        },
        {
            "name": "wc_stripe_allow_prepaid_card",
            "file": "Payments/Integrations/Stripe.php",
            "type": "filter",
            "doc": {
                "description": "Filters if prepaid cards are supported by Stripe.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "True if prepaid cards are allowed.",
                        "types": [
                            "boolean"
                        ],
                        "variable": "$allow_prepaid_card"
                    },
                    {
                        "name": "return",
                        "content": "",
                        "types": [
                            "boolean"
                        ]
                    }
                ],
                "long_description_html": ""
            }
        },
        {
            "name": "wc_stripe_display_save_payment_method_checkbox",
            "file": "Payments/Integrations/Stripe.php",
            "type": "filter",
            "doc": {
                "description": "Filters if the save payment method checkbox is shown for Stripe.",
                "long_description": "This assumes that Stripe supports `tokenization` - currently this is true, based on https://github.com/woocommerce/woocommerce-gateway-stripe/blob/master/includes/class-wc-gateway-stripe.php#L95",
                "tags": [
                    {
                        "name": "see",
                        "content": "",
                        "refers": "https://github.com/woocommerce/woocommerce-gateway-stripe/blob/ad19168b63df86176cbe35c3e95203a245687640/includes/class-wc-gateway-stripe.php#L271"
                    },
                    {
                        "name": "see",
                        "content": "",
                        "refers": "https://github.com/woocommerce/woocommerce/wiki/Payment-Token-API"
                    },
                    {
                        "name": "param",
                        "content": "True if saved cards functionality is enabled.",
                        "types": [
                            "boolean"
                        ],
                        "variable": "$saved_cards"
                    },
                    {
                        "name": "return",
                        "content": "",
                        "types": [
                            "boolean"
                        ]
                    }
                ],
                "long_description_html": "<p>This assumes that Stripe supports <code>tokenization</code> - currently this is true, based on <a href=\"https://github.com/woocommerce/woocommerce-gateway-stripe/blob/master/includes/class-wc-gateway-stripe.php#L95\">https://github.com/woocommerce/woocommerce-gateway-stripe/blob/master/includes/class-wc-gateway-stripe.php#L95</a></p>"
            }
        },
        {
            "name": "wc_stripe_payment_request_button_locale",
            "file": "Payments/Integrations/Stripe.php",
            "type": "filter",
            "doc": {
                "description": "Filters the payment request button locale.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "Current locale. Defaults to en_US.",
                        "types": [
                            "string"
                        ],
                        "variable": "$locale"
                    },
                    {
                        "name": "return",
                        "content": "",
                        "types": [
                            "string"
                        ]
                    }
                ],
                "long_description_html": ""
            }
        },
        {
            "name": "woocommerce_add_cart_item",
            "file": "StoreApi/Utilities/CartController.php",
            "type": "filter",
            "doc": {
                "description": "",
                "long_description": "",
                "tags": [],
                "long_description_html": ""
            }
        },
        {
            "name": "woocommerce_add_cart_item_data",
            "file": "StoreApi/Utilities/CartController.php",
            "type": "filter",
            "doc": {
                "description": "",
                "long_description": "",
                "tags": [],
                "long_description_html": ""
            }
        },
        {
            "name": "woocommerce_add_to_cart_sold_individually_quantity",
            "file": "StoreApi/Utilities/CartController.php",
            "type": "filter",
            "doc": {
                "description": "",
                "long_description": "",
                "tags": [],
                "long_description_html": ""
            }
        },
        {
            "name": "woocommerce_add_to_cart_validation",
            "file": "StoreApi/Utilities/CartController.php",
            "type": "filter",
            "doc": {
                "description": "Hook: woocommerce_add_to_cart_validation (legacy).",
                "long_description": "Allow 3rd parties to validate if an item can be added to the cart. This is a legacy hook from Woo core. This filter will be deprecated because it encourages usage of wc_add_notice. For the API we need to capture notices and convert to exceptions instead.",
                "tags": [],
                "long_description_html": "<p>Allow 3rd parties to validate if an item can be added to the cart. This is a legacy hook from Woo core. This filter will be deprecated because it encourages usage of wc_add_notice. For the API we need to capture notices and convert to exceptions instead.</p>"
            }
        },
        {
            "name": "woocommerce_adjust_non_base_location_prices",
            "file": "StoreApi/Utilities/ProductQuery.php",
            "type": "filter",
            "doc": {
                "description": "",
                "long_description": "",
                "tags": [],
                "long_description_html": ""
            }
        },
        {
            "name": "woocommerce_apply_individual_use_coupon",
            "file": "StoreApi/Utilities/CartController.php",
            "type": "filter",
            "doc": {
                "description": "",
                "long_description": "",
                "tags": [],
                "long_description_html": ""
            }
        },
        {
            "name": "woocommerce_apply_with_individual_use_coupon",
            "file": "StoreApi/Utilities/CartController.php",
            "type": "filter",
            "doc": {
                "description": "",
                "long_description": "",
                "tags": [],
                "long_description_html": ""
            }
        },
        {
            "name": "woocommerce_blocks_product_grid_is_cacheable",
            "file": "BlockTypes/AbstractProductGrid.php",
            "type": "filter",
            "doc": {
                "description": "Filters whether or not the product grid is cacheable.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "The list of script dependencies.",
                        "types": [
                            "boolean"
                        ],
                        "variable": "$is_cacheable"
                    },
                    {
                        "name": "param",
                        "content": "Query args for the products query passed to BlocksWpQuery.",
                        "types": [
                            "array"
                        ],
                        "variable": "$query_args"
                    },
                    {
                        "name": "return",
                        "content": "True to enable cache, false to disable cache.",
                        "types": [
                            "array"
                        ]
                    }
                ],
                "long_description_html": ""
            }
        },
        {
            "name": "woocommerce_blocks_product_grid_item_html",
            "file": "BlockTypes/AbstractProductGrid.php",
            "type": "filter",
            "doc": {
                "description": "Filters the HTML for products in the grid.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "Product grid item HTML.",
                        "types": [
                            "string"
                        ],
                        "variable": "$html"
                    },
                    {
                        "name": "param",
                        "content": "Product data passed to the template.",
                        "types": [
                            "array"
                        ],
                        "variable": "$data"
                    },
                    {
                        "name": "param",
                        "content": "Product object.",
                        "types": [
                            "\\WC_Product"
                        ],
                        "variable": "$product"
                    },
                    {
                        "name": "return",
                        "content": "Updated product grid item HTML.",
                        "types": [
                            "string"
                        ]
                    }
                ],
                "long_description_html": ""
            }
        },
        {
            "name": "woocommerce_blocks_register_script_dependencies",
            "file": "Assets/Api.php",
            "type": "filter",
            "doc": {
                "description": "Filters the list of script dependencies.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "The list of script dependencies.",
                        "types": [
                            "array"
                        ],
                        "variable": "$dependencies"
                    },
                    {
                        "name": "param",
                        "content": "The script's handle.",
                        "types": [
                            "string"
                        ],
                        "variable": "$handle"
                    },
                    {
                        "name": "return",
                        "content": "",
                        "types": [
                            "array"
                        ]
                    }
                ],
                "long_description_html": ""
            }
        },
        {
            "name": "woocommerce_cart_contents_changed",
            "file": "StoreApi/Utilities/CartController.php",
            "type": "filter",
            "doc": {
                "description": "",
                "long_description": "",
                "tags": [],
                "long_description_html": ""
            }
        },
        {
            "name": "woocommerce_ga_disable_tracking",
            "file": "Domain/Services/GoogleAnalytics.php",
            "type": "filter",
            "doc": {
                "description": "Filter to disable Google Analytics tracking.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "If true, tracking will be disabled.",
                        "types": [
                            "boolean"
                        ],
                        "variable": "$disable_tracking"
                    }
                ],
                "long_description_html": ""
            }
        },
        {
            "name": "woocommerce_get_item_data",
            "file": "StoreApi/Schemas/CartItemSchema.php",
            "type": "filter",
            "doc": {
                "description": "",
                "long_description": "",
                "tags": [],
                "long_description_html": ""
            }
        },
        {
            "name": "woocommerce_new_customer_data",
            "file": "Domain/Services/CreateAccount.php",
            "type": "filter",
            "doc": {
                "description": "Filters customer data before a customer account is registered.",
                "long_description": "This hook filters customer data. It allows user data to be changed, for example, username, password, email, first name, last name, and role.",
                "tags": [
                    {
                        "name": "param",
                        "content": "An array of customer (user) data.",
                        "types": [
                            "array"
                        ],
                        "variable": "$customer_data"
                    },
                    {
                        "name": "return",
                        "content": "",
                        "types": [
                            "array"
                        ]
                    }
                ],
                "long_description_html": "<p>This hook filters customer data. It allows user data to be changed, for example, username, password, email, first name, last name, and role.</p>"
            }
        },
        {
            "name": "woocommerce_registration_errors",
            "file": "Domain/Services/CreateAccount.php",
            "type": "filter",
            "doc": {
                "description": "Filters registration errors before a customer account is registered.",
                "long_description": "This hook filters registration errors. This can be used to manipulate the array of errors before they are displayed.",
                "tags": [
                    {
                        "name": "param",
                        "content": "Error object.",
                        "types": [
                            "\\WP_Error"
                        ],
                        "variable": "$errors"
                    },
                    {
                        "name": "param",
                        "content": "Customer username.",
                        "types": [
                            "string"
                        ],
                        "variable": "$username"
                    },
                    {
                        "name": "param",
                        "content": "Customer email address.",
                        "types": [
                            "string"
                        ],
                        "variable": "$user_email"
                    },
                    {
                        "name": "return",
                        "content": "",
                        "types": [
                            "\\WP_Error"
                        ]
                    }
                ],
                "long_description_html": "<p>This hook filters registration errors. This can be used to manipulate the array of errors before they are displayed.</p>"
            }
        },
        {
            "name": "woocommerce_shared_settings",
            "file": "Assets/AssetDataRegistry.php",
            "type": "filter",
            "doc": {
                "description": "Filters the array of shared settings.",
                "long_description": "Low level hook for registration of new data late in the cycle. This is deprecated. Instead, use the data api: Automattic\\WooCommerce\\Blocks\\Package::container()     ->get( Automattic\\WooCommerce\\Blocks\\Assets\\AssetDataRegistry::class )     ->add( $key, $value )",
                "tags": [
                    {
                        "name": "deprecated",
                        "content": ""
                    },
                    {
                        "name": "param",
                        "content": "Settings data.",
                        "types": [
                            "array"
                        ],
                        "variable": "$data"
                    },
                    {
                        "name": "return",
                        "content": "",
                        "types": [
                            "array"
                        ]
                    }
                ],
                "long_description_html": "<p>Low level hook for registration of new data late in the cycle. This is deprecated. Instead, use the data api: Automattic\\WooCommerce\\Blocks\\Package::container() -&gt;get( Automattic\\WooCommerce\\Blocks\\Assets\\AssetDataRegistry::class ) -&gt;add( $key, $value )</p>"
            }
        },
        {
            "name": "woocommerce_shipping_package_name",
            "file": "StoreApi/Utilities/CartController.php",
            "type": "filter",
            "doc": {
                "description": "",
                "long_description": "",
                "tags": [],
                "long_description_html": ""
            }
        },
        {
            "name": "woocommerce_store_api_disable_nonce_check",
            "file": "StoreApi/Routes/AbstractCartRoute.php",
            "type": "filter",
            "doc": {
                "description": "Filters the Store API nonce check.",
                "long_description": "This can be used to disable the nonce check when testing API endpoints via a REST API client.",
                "tags": [
                    {
                        "name": "param",
                        "content": "If true, nonce checks will be disabled.",
                        "types": [
                            "boolean"
                        ],
                        "variable": "$disable_nonce_check"
                    },
                    {
                        "name": "return",
                        "content": "",
                        "types": [
                            "boolean"
                        ]
                    }
                ],
                "long_description_html": "<p>This can be used to disable the nonce check when testing API endpoints via a REST API client.</p>"
            }
        },
        {
            "name": "woocommerce_store_api_product_quantity_limit",
            "file": "StoreApi/Schemas/ProductSchema.php",
            "type": "filter",
            "doc": {
                "description": "",
                "long_description": "",
                "tags": [],
                "long_description_html": ""
            }
        },
        {
            "name": "woocommerce_variation_option_name",
            "file": "StoreApi/Schemas/CartItemSchema.php",
            "type": "filter",
            "doc": {
                "description": "",
                "long_description": "",
                "tags": [],
                "long_description_html": ""
            }
        }
    ]
}