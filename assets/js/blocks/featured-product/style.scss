.wc-block-featured-product {
	position: relative;
	background-size: cover;
	background-position: center center;
	min-height: 430px;
	width: 100%;
	margin: 0 0 1.5em 0;
	display: flex;
	justify-content: center;
	align-items: center;
	overflow: hidden;
	flex-wrap: wrap;

	&.has-background-dim {
		background-color: $black;
	}

	&.has-left-content {
		justify-content: flex-start;

		.wc-block-featured-product__title,
		.wc-block-featured-product__description,
		.wc-block-featured-product__price {
			margin-left: 0;
			text-align: left;
		}
	}

	&.has-right-content {
		justify-content: flex-end;

		.wc-block-featured-product__title,
		.wc-block-featured-product__description,
		.wc-block-featured-product__price {
			margin-right: 0;
			text-align: right;
		}
	}

	.wc-block-featured-product__title,
	.wc-block-featured-product__description,
	.wc-block-featured-product__price {
		color: $white;
		font-size: 2em;
		line-height: 1.25;
		z-index: 1;
		margin-bottom: 0;
		max-width: $content-width;
		padding: $block-padding;
		text-align: center;

		a,
		a:hover,
		a:focus,
		a:active {
			color: $white;
		}
	}

	&.has-background-dim::before {
		content: "";
		position: absolute;
		top: 0;
		left: 0;
		bottom: 0;
		right: 0;
		background-color: inherit;
		opacity: 0.5;
		z-index: 1;
	}

	@for $i from 1 through 10 {
		&.has-background-dim.has-background-dim-#{ $i * 10 }::before {
			opacity: $i * 0.1;
		}
	}

	// Apply max-width to floated items that have no intrinsic width
	&.alignleft,
	&.alignright {
		max-width: $content-width / 2;
		width: 100%;
	}

	// Using flexbox without an assigned height property breaks vertical center alignment in IE11.
	// Appending an empty ::after element tricks IE11 into giving the cover image an implicit height, which sidesteps this issue.
	&::after {
		display: block;
		content: "";
		font-size: 0;
		min-height: inherit;

		// IE doesn't support flex so omit that.
		@supports (position: sticky) {
			content: none;
		}
	}

	// Aligned cover blocks should not use our global alignment rules
	&.aligncenter,
	&.alignleft,
	&.alignright {
		display: flex;
	}
}
